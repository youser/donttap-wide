{"mappings":"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","sources":["node_modules/@swc/helpers/src/_sliced_to_array.js","node_modules/@swc/helpers/src/_array_with_holes.js","node_modules/@swc/helpers/src/_iterable_to_array.js","node_modules/@swc/helpers/src/_non_iterable_rest.js","source/main.js"],"sourcesContent":["import arrayWithHoles from './_array_with_holes';\nimport iterableToArrayLimit from './_iterable_to_array';\nimport nonIterableRest from './_non_iterable_rest';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n","const appDiv = document.getElementById('app')\nconst canvasDiv = document.getElementById('canvas')\n\nconst ctx = canvasDiv.getContext('2d')\n\nconst bColor = '#ff0107'\nconst fColor = '#f1f7ff'\nconst aColor = '#000107'\n\nconst h = 4\nconst w = 4\n\nconst bSize = 1\n\nlet cellSize = 100\n\nif (window.innerWidth < 446) {\n  cellSize = 72\n} else if (window.innerWidth > 1024) {\n  cellSize = 128\n}\n\ncanvasDiv.height = h * (cellSize + bSize) + bSize\ncanvasDiv.width = w * (cellSize + bSize) + bSize\n\nfunction renderSquare(x, y, cColor) {\n  ctx.fillStyle = cColor\n  const rX = y * (cellSize + bSize) + bSize\n  const rY = x * (cellSize + bSize) + bSize\n  ctx.fillRect(rY, rX, cellSize, cellSize)\n}\n\nfunction render(_bColor = bColor, _fColor = fColor) {\n  ctx.fillStyle = _bColor\n  ctx.fillRect(\n    0,\n    0,\n    (cellSize + bSize) * h + bSize,\n    (cellSize + bSize) * w + bSize\n  )\n\n  ctx.fillStyle = _fColor\n\n  for (let y = 0; y < h; ++y) {\n    for (let x = 0; x < w; ++x) {\n      const rX = y * (cellSize + bSize) + bSize\n      const rY = x * (cellSize + bSize) + bSize\n      ctx.fillRect(rY, rX, cellSize, cellSize)\n    }\n  }\n}\n\nfunction renderBorders(sColor = bColor) {\n  ctx.strokeStyle = sColor\n\n  for (let x = 0; x <= w; ++x) {\n    ctx.moveTo(x * (cellSize + bSize) + 0.5, 0)\n    ctx.lineTo(x * (cellSize + bSize) + 0.5, h * (cellSize + bSize) + bSize)\n    ctx.stroke()\n  }\n  for (let y = 0; y <= h; ++y) {\n    ctx.moveTo(0, y * (cellSize + bSize) + 0.5)\n    ctx.lineTo(w * (cellSize + bSize) + bSize, y * (cellSize + bSize) + 0.5)\n    ctx.stroke()\n  }\n}\n\nlet speed = 0\nlet clicks = 0\nlet misses = 0\nlet accuracy = 1\n\nconst breakPoint = 4\nlet missStreak = 0\n\nlet state = 'STOP'\nlet clock = 0.0\nlet startTime = new Date()\nlet clickTime = startTime\n\nlet clickStamps = []\nlet gameMap = []\n\nconst clockDiv = document.getElementById('clock')\nconst infoDiv = document.getElementById('information')\n\nlet timer = -1\n\nfunction textNumber(number) {\n  tNumber = String(Math.round(number * 100) / 100)\n\n  if (tNumber.slice(-2, -1) == '.') tNumber += '0'\n  if (tNumber.slice(-3, -2) != '.') tNumber += '.00'\n\n  return tNumber\n}\n\nfunction gameover() {\n  state = 'GAMEOVER'\n  clearTimeout(timer)\n  clock = 0.0\n  clockDiv.classList.add('gameover')\n  render(bColor, aColor)\n}\n\nfunction run() {\n  if (state != 'RUNNING') {\n    return\n  }\n\n  const d = new Date()\n\n  let i = 0\n  for (; i < clickStamps.length; ++i) {\n    if ((d - clickStamps[i]) / 1000 > 10) {\n      break\n    }\n  }\n\n  clock = (d - startTime) / 1000\n\n  speed = i / (clock < 10 ? clock || 1 : 10)\n  accuracy = clicks ? clicks / (clicks + misses) : 1\n\n  const tSpeed = textNumber(speed)\n  const tClicks = String(clicks)\n  const tAccuracy = textNumber(accuracy)\n\n  infoDiv.textContent = `${tSpeed} / ${tClicks} / ${tAccuracy}`\n\n  if (clock > 0) {\n    clockDiv.textContent = textNumber(clock)\n  } else {\n    clockDiv.textContent = '0.00'\n  }\n\n  if ((d - clickTime) / 1000 > 4) {\n    gameover()\n  } else {\n    setTimeout(run, 0)\n  }\n}\n\nconst activeCells = 3\n\nfunction start() {\n  clockDiv.classList.remove('gameover')\n\n  gameMap = []\n  for (let y = 0; y < h; ++y) {\n    for (let x = 0; x < w; ++x) {\n      gameMap.push(`${x}.${y}`)\n    }\n  }\n\n  render()\n\n  for (let i = 0; i < activeCells; ++i) {\n    const index = Math.floor(Math.random() * gameMap.length)\n    const cell = gameMap[index]\n    const [x, y] = cell.split('.')\n    renderSquare(x, y, aColor)\n    gameMap.splice(index, 1)\n  }\n\n  speed = 0\n  clicks = 0\n  misses = 0\n  missStreak = 0\n  accuracy = 1\n\n  clock = 0.0\n  startTime = new Date()\n  clickTime = startTime\n\n  clickStamps = []\n\n  state = 'RUNNING'\n\n  run()\n}\n\nconst clickSound = new Audio('click.wav')\nclickSound.volume = 0.2\n\nfunction hit(event) {\n  clicks += 1\n\n  if (state == 'RUNNING') {\n    const x = event.offsetX\n    const y = event.offsetY\n\n    if (x == 0 || y == 0 || x == this.width || y == this.height) {\n      misses += 1\n      missStreak += 1\n    } else {\n      const cellX = Math.floor((x - (x % (cellSize + bSize))) / cellSize)\n      const cellY = Math.floor((y - (y % (cellSize + bSize))) / cellSize)\n\n      if (gameMap.includes(`${cellX}.${cellY}`) || cellY >= h || cellX >= w) {\n        misses += 1\n        missStreak += 1\n      } else {\n        missStreak = 0\n        renderSquare(cellX, cellY, fColor)\n        {\n          const index = Math.floor(Math.random() * gameMap.length)\n          const cell = gameMap[index]\n          const [x, y] = cell.split('.')\n          renderSquare(x, y, aColor)\n          gameMap.splice(index, 1)\n        }\n        gameMap.push(`${cellX}.${cellY}`)\n        clickSound.pause()\n        clickSound.currentTime = 0\n        clickSound.play()\n      }\n    }\n\n    clickTime = new Date()\n    clickStamps.unshift(clickTime)\n\n    if (missStreak >= breakPoint) {\n      gameover()\n    }\n  } else {\n    start()\n  }\n\n  if (window.getSelection) {\n    window.getSelection().removeAllRanges()\n  } else if (document.selection) {\n    document.selection.empty()\n  }\n}\n\nrender(bColor, aColor)\n\nlet cX, cY\n\ncanvasDiv.addEventListener('mousemove', function (e) {\n  cX = e.clientX\n  cY = e.clientY\n})\ncanvasDiv.addEventListener('mousedown', hit)\ncanvasDiv.addEventListener('contextmenu', (e) => {\n  e.preventDefault()\n  return false\n})\n\ndocument.body.addEventListener('keydown', (e) => {\n  if (['Space', 'Escape'].includes(e.code)) {\n    start()\n  } else if (['KeyZ', 'KeyX', 'KeyC', 'KeyV'].includes(e.code)) {\n    const event = new MouseEvent('mousedown', {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n      clientX: cX,\n      clientY: cY\n    })\n    canvasDiv.dispatchEvent(event)\n  }\n})\nwindow.addEventListener('resize', (e) => {\n  if (state != 'RUNNING') {\n    cellSize = 100\n\n    if (window.innerWidth < 446) {\n      cellSize = 72\n    } else if (window.innerWidth > 1024) {\n      cellSize = 128\n    }\n\n    canvasDiv.height = h * (cellSize + bSize) + bSize\n    canvasDiv.width = w * (cellSize + bSize) + bSize\n\n    render(bColor, aColor)\n  }\n})\n"],"names":["arr","i","Array","isArray","$2caad49fb91b2599568b6dd8f88222e1$export$9099ad97b570f7c","iter","Symbol","iterator","Object","prototype","toString","call","from","$8607729fe30814bbe4c1a99481280d48$export$9099ad97b570f7c","TypeError","$fd7ad7649e929379c604e2ad8fcc0ab6$export$9099ad97b570f7c","document","getElementById","$e896de80a33cd7de679c6d900dd952fc$var$canvasDiv","$e896de80a33cd7de679c6d900dd952fc$var$ctx","getContext","$e896de80a33cd7de679c6d900dd952fc$var$bColor","$e896de80a33cd7de679c6d900dd952fc$var$fColor","$e896de80a33cd7de679c6d900dd952fc$var$aColor","$e896de80a33cd7de679c6d900dd952fc$var$cellSize","$e896de80a33cd7de679c6d900dd952fc$var$renderSquare","x","y","cColor","fillStyle","rX","rY","fillRect","$e896de80a33cd7de679c6d900dd952fc$var$render","param","param1","_bColor","_fColor","window","innerWidth","height","width","$e896de80a33cd7de679c6d900dd952fc$var$clicks","$e896de80a33cd7de679c6d900dd952fc$var$misses","$e896de80a33cd7de679c6d900dd952fc$var$accuracy","$e896de80a33cd7de679c6d900dd952fc$var$missStreak","$e896de80a33cd7de679c6d900dd952fc$var$state","$e896de80a33cd7de679c6d900dd952fc$var$clock","$e896de80a33cd7de679c6d900dd952fc$var$startTime","Date","$e896de80a33cd7de679c6d900dd952fc$var$clickTime","$e896de80a33cd7de679c6d900dd952fc$var$clickStamps","$e896de80a33cd7de679c6d900dd952fc$var$gameMap","$e896de80a33cd7de679c6d900dd952fc$var$clockDiv","$e896de80a33cd7de679c6d900dd952fc$var$infoDiv","$e896de80a33cd7de679c6d900dd952fc$var$textNumber","number","tNumber","String","Math","round","slice","$e896de80a33cd7de679c6d900dd952fc$var$gameover","clearTimeout","classList","add","$e896de80a33cd7de679c6d900dd952fc$var$run","d","length","tSpeed","tClicks","tAccuracy","textContent","concat","setTimeout","$e896de80a33cd7de679c6d900dd952fc$var$start","remove","push","index","floor","random","ref","$cbe58668fdd909cb9e477eba8f34e28e$export$9099ad97b570f7c","split","splice","$e896de80a33cd7de679c6d900dd952fc$var$clickSound","Audio","volume","$e896de80a33cd7de679c6d900dd952fc$var$cX","$e896de80a33cd7de679c6d900dd952fc$var$cY","addEventListener","e","clientX","clientY","event","x2","offsetX","y2","offsetY","this","cellX","cellY","includes","pause","currentTime","play","unshift","getSelection","removeAllRanges","selection","empty","preventDefault","body","code","MouseEvent","view","bubbles","cancelable","dispatchEvent"],"version":3,"file":"app.HASH_REF_0f41f029b5509d3a3182b0620385d74d.js.map"}