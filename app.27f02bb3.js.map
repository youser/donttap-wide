{"mappings":"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","sources":["node_modules/@swc/helpers/src/_sliced_to_array.js","node_modules/@swc/helpers/src/_array_with_holes.js","node_modules/@swc/helpers/src/_iterable_to_array.js","node_modules/@swc/helpers/src/_non_iterable_rest.js","source/main.js"],"sourcesContent":["import arrayWithHoles from './_array_with_holes';\nimport iterableToArrayLimit from './_iterable_to_array';\nimport nonIterableRest from './_non_iterable_rest';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n","const appDiv = document.getElementById('app')\nconst canvasDiv = document.getElementById('canvas')\n\nconst ctx = canvasDiv.getContext('2d')\n\nconst h = 4\nconst w = 4\n\nconst bColor = '#ff0107'\nconst fColor = '#f1f7ff'\nconst aColor = '#000107'\n\nconst cellSize = 100\nconst bSize = 1\n\nfunction renderSquare(x, y, cColor) {\n  console.log('renderSquare')\n  ctx.fillStyle = cColor\n  const rX = y * (cellSize + bSize) + bSize\n  const rY = x * (cellSize + bSize) + bSize\n  ctx.fillRect(rY, rX, cellSize, cellSize)\n}\n\nfunction render(_bColor = bColor, _fColor = fColor) {\n  console.log('render')\n  ctx.fillStyle = _bColor\n  ctx.fillRect(\n    0,\n    0,\n    (cellSize + bSize) * h + bSize,\n    (cellSize + bSize) * w + bSize\n  )\n\n  ctx.fillStyle = _fColor\n\n  for (let y = 0; y < h; ++y) {\n    for (let x = 0; x < w; ++x) {\n      const rX = y * (cellSize + bSize) + bSize\n      const rY = x * (cellSize + bSize) + bSize\n      ctx.fillRect(rY, rX, cellSize, cellSize)\n    }\n  }\n}\n\nfunction renderBorders(sColor = bColor) {\n  console.log('renderBorders')\n  ctx.strokeStyle = sColor\n\n  for (let x = 0; x <= w; ++x) {\n    ctx.moveTo(x * (cellSize + bSize) + 0.5, 0)\n    ctx.lineTo(x * (cellSize + bSize) + 0.5, h * (cellSize + bSize) + bSize)\n    ctx.stroke()\n  }\n  for (let y = 0; y <= h; ++y) {\n    ctx.moveTo(0, y * (cellSize + bSize) + 0.5)\n    ctx.lineTo(w * (cellSize + bSize) + bSize, y * (cellSize + bSize) + 0.5)\n    ctx.stroke()\n  }\n}\n\nlet speed = 0\nlet clicks = 0\nlet misses = 0\nlet accuracy = 1\n\nconst breakPoint = 4\nlet missStreak = 0\n\nlet clock = 0.0\nlet startTime = new Date()\nlet clickTime = startTime\n\nconst clockDiv = document.getElementById('clock')\nconst infoDiv = document.getElementById('information')\n\nlet timer = -1\n\nlet gameMap = []\n\nfunction textNumber(number) {\n  tNumber = String(Math.round(number * 100) / 100)\n\n  if (tNumber.slice(-2, -1) == '.') tNumber += '0'\n  if (tNumber.slice(-3, -2) != '.') tNumber += '.00'\n\n  return tNumber\n}\n\nfunction gameover() {\n  console.log('gameover')\n  clearTimeout(timer)\n  clock = 0.0\n  clockDiv.classList.add('gameover')\n  render(bColor, aColor)\n}\n\nfunction run() {\n  speed = clock ? clicks / clock : 0\n  accuracy = clicks ? clicks / (clicks + misses) : 1\n\n  const tSpeed = textNumber(speed)\n  const tClicks = textNumber(clicks)\n  const tAccuracy = textNumber(accuracy)\n\n  infoDiv.textContent = `${tSpeed} / ${tClicks} / ${tAccuracy}`\n\n  clock = (new Date() - startTime) / 1000\n\n  if (clock > 0) {\n    clockDiv.textContent = textNumber(clock)\n  } else {\n    clockDiv.textContent = '0.00'\n  }\n\n  if ((new Date() - clickTime) / 1000 > 8) {\n    gameover()\n  } else {\n    setTimeout(run, 0)\n  }\n}\n\nconst activeCells = 3\n\nfunction start() {\n  console.log('start')\n  clockDiv.classList.remove('gameover')\n\n  for (let y = 0; y < h; ++y) {\n    for (let x = 0; x < w; ++x) {\n      gameMap.push(`${x}.${y}`)\n    }\n  }\n\n  render()\n\n  for (let i = 0; i < activeCells; ++i) {\n    let cell = gameMap[Math.floor(Math.random() * gameMap.length)]\n    let [x, y] = cell.split('.')\n    renderSquare(x, y, aColor)\n    gameMap = gameMap.filter((x) => x != cell)\n  }\n\n  speed = 0\n  clicks = 0\n  misses = 0\n  accuracy = 1\n\n  clock = 0.0\n  startTime = new Date()\n  clickTime = startTime\n\n  run()\n}\n\nfunction hit(event) {\n  console.log('hit')\n\n  clicks += 1\n\n  if (clock) {\n    const x = event.offsetX\n    const y = event.offsetY\n\n    if (x == 0 || y == 0 || x == this.width || y == this.height) {\n      misses += 1\n      missStreak += 1\n    } else {\n      const cellX = Math.floor((x - (x % (cellSize + bSize))) / cellSize)\n      const cellY = Math.floor((y - (y % (cellSize + bSize))) / cellSize)\n\n      if (gameMap.includes(`${cellX}.${cellY}`)) {\n        // renderSquare(cellX, cellY, aColor)\n        misses += 1\n        missStreak += 1\n      } else {\n        renderSquare(cellX, cellY, fColor)\n      }\n    }\n\n    clickTime = new Date()\n\n    if (missStreak >= breakPoint) {\n      gameover()\n    }\n  } else {\n    start()\n  }\n}\n\nrender(bColor, aColor)\n\n// canvasDiv.addEventListener('touchstart', hit)\ncanvasDiv.addEventListener('mousedown', hit)\n\nconsole.log('script ended')\n"],"names":["arr","i","Array","isArray","$2caad49fb91b2599568b6dd8f88222e1$export$9099ad97b570f7c","iter","Symbol","iterator","Object","prototype","toString","call","from","$8607729fe30814bbe4c1a99481280d48$export$9099ad97b570f7c","TypeError","$fd7ad7649e929379c604e2ad8fcc0ab6$export$9099ad97b570f7c","document","getElementById","$e896de80a33cd7de679c6d900dd952fc$var$canvasDiv","$e896de80a33cd7de679c6d900dd952fc$var$ctx","getContext","$e896de80a33cd7de679c6d900dd952fc$var$bColor","$e896de80a33cd7de679c6d900dd952fc$var$fColor","$e896de80a33cd7de679c6d900dd952fc$var$aColor","$e896de80a33cd7de679c6d900dd952fc$var$cellSize","$e896de80a33cd7de679c6d900dd952fc$var$renderSquare","x","y","cColor","console","log","fillStyle","rX","rY","fillRect","$e896de80a33cd7de679c6d900dd952fc$var$render","param","param1","_bColor","_fColor","$e896de80a33cd7de679c6d900dd952fc$var$clicks","$e896de80a33cd7de679c6d900dd952fc$var$misses","$e896de80a33cd7de679c6d900dd952fc$var$accuracy","$e896de80a33cd7de679c6d900dd952fc$var$missStreak","$e896de80a33cd7de679c6d900dd952fc$var$clock","$e896de80a33cd7de679c6d900dd952fc$var$startTime","Date","$e896de80a33cd7de679c6d900dd952fc$var$clickTime","$e896de80a33cd7de679c6d900dd952fc$var$clockDiv","$e896de80a33cd7de679c6d900dd952fc$var$infoDiv","$e896de80a33cd7de679c6d900dd952fc$var$gameMap","$e896de80a33cd7de679c6d900dd952fc$var$textNumber","number","tNumber","String","Math","round","slice","$e896de80a33cd7de679c6d900dd952fc$var$gameover","clearTimeout","classList","add","$e896de80a33cd7de679c6d900dd952fc$var$run","tSpeed","tClicks","tAccuracy","textContent","concat","setTimeout","addEventListener","event","x2","offsetX","y2","offsetY","this","width","height","cellX","floor","cellY","includes","remove","push","cell","random","length","ref","$cbe58668fdd909cb9e477eba8f34e28e$export$9099ad97b570f7c","split","filter","$e896de80a33cd7de679c6d900dd952fc$var$start"],"version":3,"file":"app.27f02bb3.js.map"}