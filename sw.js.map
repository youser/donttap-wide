{"mappings":"gBACMA,EAAc,gBACJ,yBAGhBC,KAAKC,iBAAgB,YAAW,SAAYC,OACpCC,EAAqBC,OAAOC,KAAKN,GAAgBO,KAAG,SAAWC,UAC5DR,EAAeQ,MAGxBL,EAAMM,UACJC,OAAOJ,OAAOK,MAAI,SAAWC,UACpBC,QAAQC,IACbF,EAAWL,KAAG,SAAWQ,OACuB,IAA1CX,EAAmBY,QAAQD,GAAiB,OACvCL,OAAOO,OAAOF,cAOjCd,KAAKC,iBAAgB,SAAQ,SAAYC,GACvCA,EAAMe,YACJR,OACGS,KAAKnB,EAAc,iBACnBoB,MAAMjB,EAAMkB,QAAO,CAAIC,YAAY,IACnCX,MAAI,SAAWY,UACVA,GAGGC,MAAMrB,EAAMkB,QAAQI,YAE5Bd,MAAI,SAAWY,UACVA,EAASG,OAAS,KACpBC,MAAMC,IAAIzB,EAAMkB,QAASE,EAASE,SAE7BF","sources":["source/sw.js"],"sourcesContent":["const CACHE_VERSION = 2\nconst CURRENT_CACHES = {\n  'read-through': 'read-through-cache-v' + CACHE_VERSION\n}\n\nself.addEventListener('activate', function (event) {\n  const expectedCacheNames = Object.keys(CURRENT_CACHES).map(function (key) {\n    return CURRENT_CACHES[key]\n  })\n\n  event.waitUntil(\n    caches.keys().then(function (cacheNames) {\n      return Promise.all(\n        cacheNames.map(function (cacheName) {\n          if (expectedCacheNames.indexOf(cacheName) === -1) {\n            return caches.delete(cacheName)\n          }\n        })\n      )\n    })\n  )\n})\nself.addEventListener('fetch', function (event) {\n  event.respondWith(\n    caches\n      .open(CURRENT_CACHES['read-through'])\n      .match(event.request, { ignoreVary: true })\n      .then(function (response) {\n        if (response) {\n          return response\n        }\n        return fetch(event.request.clone())\n      })\n      .then(function (response) {\n        if (response.status < 400) {\n          cache.put(event.request, response.clone())\n        }\n        return response\n      })\n  )\n})\n"],"names":["$f3ad9e1bef67fbdd1f818dedcfe0e3e4$var$CURRENT_CACHES","self","addEventListener","event","expectedCacheNames","Object","keys","map","key","waitUntil","caches","then","cacheNames","Promise","all","cacheName","indexOf","delete","respondWith","open","match","request","ignoreVary","response","fetch","clone","status","cache","put"],"version":3,"file":"sw.js.map"}